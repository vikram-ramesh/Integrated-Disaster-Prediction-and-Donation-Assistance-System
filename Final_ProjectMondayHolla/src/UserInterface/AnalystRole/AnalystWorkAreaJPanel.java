/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AnalystRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.AnalyticsOrganization;
import Business.Organization.DonationOrganization;
import Business.Organization.Organization;
import static Business.Organization.Organization.Type.Donation;
import Business.Organization.ResearchOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DonationWorkRequest;
import Business.WorkQueue.ScientistWorkRequest;
import Business.WorkQueue.WorkRequest;
import DynamicDijsktars.Graph;
import DynamicDijsktars.Vertex;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.time.Day;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;

/**
 *
 * @author vikram
 */
public class AnalystWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AnalystWorkAreaJPanel
     */
    JPanel userProcessContainer;
    EcoSystem business;
    AnalyticsOrganization analyticsOrganization;
    UserAccount account;
    Enterprise enterprise;
    Network network;
    public AnalystWorkAreaJPanel(JPanel userProcessContainer, UserAccount account,AnalyticsOrganization analyticsOrganization, Enterprise enterprise, EcoSystem business, Network network) {
        initComponents();
        this.userProcessContainer =  userProcessContainer;
        this.business = business;
        this.account = account;
        this.enterprise = enterprise;
        this.network = network;
        this.analyticsOrganization = analyticsOrganization;
        
        populateTable();
        
        
         
        //print emtire work queue
        for(WorkRequest workRequest : analyticsOrganization.getWorkQueue().getWorkRequestList())
        {
            if(workRequest instanceof DonationWorkRequest)
            {
                System.out.println(workRequest.getStatus() +" work request object " +workRequest.getClass());
                String area = ((DonationWorkRequest) workRequest).getDonation().getDonatedTo();
                System.out.println(area);
            }
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnBarChart = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        chartJPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnDonationPie = new javax.swing.JButton();
        btnDonationLine = new javax.swing.JButton();
        btnDonationBar = new javax.swing.JButton();
        donationChartJLabel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        btnDonorBar = new javax.swing.JButton();
        btnDonorPie = new javax.swing.JButton();
        btnDonorLine = new javax.swing.JButton();
        donorAnalysisJPanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workrequest = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnBarChart.setText("Bar Chart");
        btnBarChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBarChartActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Donor Analytics");

        jButton2.setText("Pie Chart");

        jButton3.setText("Line Chart");

        chartJPanel.setBackground(new java.awt.Color(204, 204, 255));
        chartJPanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(249, Short.MAX_VALUE)
                .addComponent(btnBarChart, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(327, 327, 327))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chartJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBarChart, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addComponent(chartJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(320, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Donation Analytics");
        jPanel5.add(jLabel2);
        jLabel2.setBounds(207, 11, 378, 31);

        btnDonationPie.setText("PIE");
        btnDonationPie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDonationPieActionPerformed(evt);
            }
        });
        jPanel5.add(btnDonationPie);
        btnDonationPie.setBounds(370, 70, 90, 40);

        btnDonationLine.setText("CHART");
        btnDonationLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDonationLineActionPerformed(evt);
            }
        });
        jPanel5.add(btnDonationLine);
        btnDonationLine.setBounds(540, 70, 90, 40);

        btnDonationBar.setText("BAR");
        btnDonationBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDonationBarActionPerformed(evt);
            }
        });
        jPanel5.add(btnDonationBar);
        btnDonationBar.setBounds(180, 70, 90, 40);

        donationChartJLabel.setBackground(new java.awt.Color(255, 255, 255));
        donationChartJLabel.setLayout(new java.awt.BorderLayout());
        jPanel5.add(donationChartJLabel);
        donationChartJLabel.setBounds(70, 200, 760, 230);

        jTabbedPane1.addTab("Donation", jPanel5);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Donor Analysis");

        btnDonorBar.setText("BAR");
        btnDonorBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDonorBarActionPerformed(evt);
            }
        });

        btnDonorPie.setText("PIE");
        btnDonorPie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDonorPieActionPerformed(evt);
            }
        });

        btnDonorLine.setText("CHART");
        btnDonorLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDonorLineActionPerformed(evt);
            }
        });

        donorAnalysisJPanel.setBackground(new java.awt.Color(255, 255, 255));
        donorAnalysisJPanel.setLayout(new javax.swing.BoxLayout(donorAnalysisJPanel, javax.swing.BoxLayout.LINE_AXIS));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(donorAnalysisJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 242, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(btnDonorBar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(125, 125, 125)
                        .addComponent(btnDonorPie, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(171, 171, 171)
                        .addComponent(btnDonorLine, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDonorBar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDonorPie, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDonorLine, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(150, 150, 150)
                .addComponent(donorAnalysisJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Donor", jPanel3);

        workrequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Area", "Sender", "Message", "status"
            }
        ));
        jScrollPane1.setViewportView(workrequest);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(433, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(528, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab3", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1018, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBarChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarChartActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
        barChartData.setValue(20000,"No of donors","January");
        barChartData.setValue(15000,"No of donors","February");
        barChartData.setValue(10000,"No of donors","March");
        barChartData.setValue(40000,"No of donors","April");
        barChartData.setValue(30000,"No of donors","May");
        
        JFreeChart barChart = ChartFactory.createBarChart("Emergency Donation", "Monthly", "Contribution Amount", barChartData, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot brChart = barChart.getCategoryPlot();
        brChart.setRangeGridlinePaint(Color.GREEN);
       
        
        ChartPanel barPanel = new ChartPanel(barChart);
        chartJPanel.removeAll();
        chartJPanel.add(barPanel,BorderLayout.CENTER);
        chartJPanel.validate();
        
        
       
    }//GEN-LAST:event_btnBarChartActionPerformed

    
    public void populateTable()
    {
        DefaultTableModel dtm = (DefaultTableModel) workrequest.getModel();
        dtm.setRowCount(0);
            
        //WorkRequest request : organization.getWorkQueue().getWorkRequestList()
            
                for(WorkRequest request : analyticsOrganization.getWorkQueue().getWorkRequestList())
                {
                    
                    
                        //ScientistWorkRequest swr = (ScientistWorkRequest) request;
                        Object[] row = new Object[3];
                        row[0] = request;
                        row[1] = request.getMessage();
                        row[2] = request.getStatus();
                        dtm.addRow(row);
                    
                    
                }
                    //break; 
            
        
    }
    
    private void btnDonationBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDonationBarActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
        Map<String,Integer> areaFunds = new HashMap<String,Integer>();
        
        
//        barChartData.setValue(20000,"Funds","January");
//        barChartData.setValue(15000,"Contribution Amount","February");
//        barChartData.setValue(10000,"Contribution Amount","March");
//        barChartData.setValue(40000,"Contribution Amount","April");
//        barChartData.setValue(30000,"Contribution Amount","May");
//        
        
       for(WorkRequest request : analyticsOrganization.getWorkQueue().getWorkRequestList())
       {
           if(request instanceof DonationWorkRequest)
           {
              if(((DonationWorkRequest) request).getDonation().getDonatedTo()!= null)
              {
                  barChartData.setValue(((DonationWorkRequest) request).getDonation().getMoneyDonation(),"Funds", ((DonationWorkRequest) request).getDonation().getDonatedTo());
              }
              
           }
       }
        
        JFreeChart barChart = ChartFactory.createBarChart("Emergency Donation", "Area", "Funds", barChartData, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot brChart = barChart.getCategoryPlot();
        brChart.setRangeGridlinePaint(Color.GREEN);
       
        
        ChartPanel barPanel = new ChartPanel(barChart);
        donationChartJLabel.removeAll();
        donationChartJLabel.add(barPanel,BorderLayout.CENTER);
        donationChartJLabel.validate();
    }//GEN-LAST:event_btnDonationBarActionPerformed

    private void btnDonorBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDonorBarActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
        
        for(WorkRequest wr : analyticsOrganization.getWorkQueue().getWorkRequestList())
        {
            if(wr instanceof DonationWorkRequest)
            {
                if(((DonationWorkRequest) wr).getDonation().getMoneyDonation() != 0.0)
                {
                    System.out.println(((DonationWorkRequest) wr).getDonation().getMoneyDonation() +" " +wr.getSender().getUsername());
                     barChartData.setValue( ((DonationWorkRequest) wr).getDonation().getMoneyDonation(), "funds" , wr.getSender().getUsername());
                }
               
            }
        }
        
        
//        
//        barChartData.setValue(15000,"Contribution Amount","February");
//        barChartData.setValue(10000,"Contribution Amount","March");
//        barChartData.setValue(40000,"Contribution Amount","April");
//        barChartData.setValue(30000,"Contribution Amount","May");
        
        JFreeChart barChart = ChartFactory.createBarChart("Donation", "Donor name", "Contribution Amount", barChartData, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot brChart = barChart.getCategoryPlot();
        brChart.setRangeGridlinePaint(Color.GREEN);
       
        
        ChartPanel barPanel = new ChartPanel(barChart);
        donorAnalysisJPanel.removeAll();
        donorAnalysisJPanel.add(barPanel,BorderLayout.CENTER);
        donorAnalysisJPanel.validate();
    }//GEN-LAST:event_btnDonorBarActionPerformed

    private void btnDonorPieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDonorPieActionPerformed
        // TODO add your handling code here:
        
        
        
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        double foodCounter = 0;
        double clothCounter = 0;
        double moneyCounter = 0;
        for(WorkRequest wr : analyticsOrganization.getWorkQueue().getWorkRequestList())
        {
            if(wr instanceof DonationWorkRequest)
            {
                foodCounter += ((DonationWorkRequest) wr).getDonation().getFood_quantity();
                clothCounter += ((DonationWorkRequest) wr).getDonation().getCloth_quantity();
                moneyCounter += ((DonationWorkRequest) wr).getDonation().getMoneyDonation();
            }
        }
        
        pieDataset.setValue("Food",foodCounter);
        pieDataset.setValue("Cloth",clothCounter);
        pieDataset.setValue("money",moneyCounter);
//        pieDataset.setValue("April",40000);
//        pieDataset.setValue("May",30000);
        
        JFreeChart barChart = ChartFactory.createPieChart("Contribution Amount", pieDataset,true, true, false);
        //CategoryPlot brChart = barChart.getCategoryPlot();
        //brChart.setRangeGridlinePaint(Color.GREEN);
       
        
        ChartPanel barPanel = new ChartPanel(barChart);
        donorAnalysisJPanel.removeAll();
        donorAnalysisJPanel.add(barPanel,BorderLayout.CENTER);
        donorAnalysisJPanel.validate();
    }//GEN-LAST:event_btnDonorPieActionPerformed

    private void btnDonationPieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDonationPieActionPerformed
        // TODO add your handling code here:
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        pieDataset.setValue("January",20000);
        pieDataset.setValue("February",15000);
        pieDataset.setValue("March",10000);
        pieDataset.setValue("April",40000);
        pieDataset.setValue("May",30000);
        
        JFreeChart barChart = ChartFactory.createPieChart("Contribution Amount", pieDataset,true, true, false);
        //CategoryPlot brChart = barChart.getCategoryPlot();
        //brChart.setRangeGridlinePaint(Color.GREEN);
       
        
        ChartPanel barPanel = new ChartPanel(barChart);
        donationChartJLabel.removeAll();
        donationChartJLabel.add(barPanel,BorderLayout.CENTER);
        donationChartJLabel.validate();
        
    }//GEN-LAST:event_btnDonationPieActionPerformed

    private void btnDonationLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDonationLineActionPerformed
        // TODO add your handling code here:
        TimeSeries pop = new TimeSeries("Population", Day.class);
    pop.add(new Day(10, 1, 2004), 100);
    pop.add(new Day(10, 2, 2004), 150);
    pop.add(new Day(10, 3, 2004), 250);
    pop.add(new Day(10, 4, 2004), 275);
    pop.add(new Day(10, 5, 2004), 325);
    
    TimeSeriesCollection dataset = new TimeSeriesCollection();
    dataset.addSeries(pop);
    JFreeChart chart = ChartFactory.createTimeSeriesChart(
    "Population of CSC408 Town",
    "Date",
    "Population",
    dataset,
    true,
    true,
    false);
    
     ChartPanel barPanel = new ChartPanel(chart);
        donationChartJLabel.removeAll();
        donationChartJLabel.add(barPanel,BorderLayout.CENTER);
        donationChartJLabel.validate();
    }//GEN-LAST:event_btnDonationLineActionPerformed

    private void btnDonorLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDonorLineActionPerformed
        // TODO add your handling code here:
                TimeSeries pop = new TimeSeries("Population", Day.class);
    pop.add(new Day(10, 1, 2004), 100);
    pop.add(new Day(10, 2, 2004), 150);
    pop.add(new Day(10, 3, 2004), 250);
    pop.add(new Day(10, 4, 2004), 275);
    pop.add(new Day(10, 5, 2004), 325);
    
    TimeSeriesCollection dataset = new TimeSeriesCollection();
    dataset.addSeries(pop);
    JFreeChart chart = ChartFactory.createTimeSeriesChart(
    "Population of CSC408 Town",
    "Date",
    "Population",
    dataset,
    true,
    true,
    false);
    
     ChartPanel barPanel = new ChartPanel(chart);
        donorAnalysisJPanel.removeAll();
        donorAnalysisJPanel.add(barPanel,BorderLayout.CENTER);
        donorAnalysisJPanel.validate();
    }//GEN-LAST:event_btnDonorLineActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBarChart;
    private javax.swing.JButton btnDonationBar;
    private javax.swing.JButton btnDonationLine;
    private javax.swing.JButton btnDonationPie;
    private javax.swing.JButton btnDonorBar;
    private javax.swing.JButton btnDonorLine;
    private javax.swing.JButton btnDonorPie;
    private javax.swing.JPanel chartJPanel;
    private javax.swing.JPanel donationChartJLabel;
    private javax.swing.JPanel donorAnalysisJPanel;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable workrequest;
    // End of variables declaration//GEN-END:variables
}
